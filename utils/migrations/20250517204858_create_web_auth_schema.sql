-- +goose Up

CREATE SCHEMA IF NOT EXISTS web_auth;

create sequence web_auth.crowd_apps_id_seq;

create table web_auth.api_tokens
(
    token_id    varchar                  not null
        constraint api_tokens_pk
            primary key,
    name        varchar                  not null,
    description varchar,
    expiry      timestamp with time zone not null,
    user_id     integer                  not null
        constraint api_tokens_users_user_id_fk
            references people.users
);

create unique index api_tokens_token_id_uindex
    on web_auth.api_tokens (token_id);

create table web_auth.crowd_apps
(
    app_id      integer generated by default as identity
        constraint crowd_apps_pk
            primary key,
    username    varchar                                not null,
    description varchar,
    active      boolean default false                  not null,
    password    text                                   not null,
    salt        text                                   not null,
    name        varchar default 'a'::character varying not null
);

alter sequence web_auth.crowd_apps_id_seq owned by web_auth.crowd_apps.app_id;

create unique index crowd_apps_app_id_uindex
    on web_auth.crowd_apps (app_id);

create unique index crowd_apps_username_uindex
    on web_auth.crowd_apps (username);

-- +goose Down

DROP SCHEMA web_auth CASCADE;