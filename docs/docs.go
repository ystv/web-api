// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2021-07-30 01:52:08.042916677 +0100 BST m=+0.061438471

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/internal/clapper/calendar/monthly/{year}/{month}": {
            "get": {
                "description": "Lists events by month. The signup section will be null.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clapper-events"
                ],
                "summary": "List events by month",
                "operationId": "get-events-month",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "month",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clapper.Event"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/clapper/event": {
            "put": {
                "description": "updates an event. Only uses the meta, if you change the\ntype it will delete the children.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-events"
                ],
                "summary": "Update event",
                "operationId": "update-event",
                "parameters": [
                    {
                        "description": "Event object",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clapper.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "description": "creates a new event.\nYou do not need to include the sign-up sheets just the meta",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-events"
                ],
                "summary": "New event",
                "operationId": "new-event",
                "parameters": [
                    {
                        "description": "Event object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clapper.NewEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event ID",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/v1/internal/clapper/event/{eventid}": {
            "get": {
                "description": "Get a event including signup-sheets and roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clapper-events"
                ],
                "summary": "Get event by ID",
                "operationId": "get-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "eventid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clapper.Event"
                        }
                    }
                }
            },
            "delete": {
                "description": "Removes an event including its children",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-events"
                ],
                "summary": "Delete event",
                "operationId": "delete-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "eventid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/clapper/event/{eventid}/signup": {
            "post": {
                "description": "Creates a new signup sheet, this is the sub part of an event\ncontaining the list of crew, with a little metadata on top.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-signups"
                ],
                "summary": "New signup sheet",
                "operationId": "new-signup",
                "parameters": [
                    {
                        "description": "Signup object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clapper.NewSignup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Event ID",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/v1/internal/clapper/event/{eventid}/{signupid}": {
            "put": {
                "description": "updates a signup sheet, to the body.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-signups"
                ],
                "summary": "Update signup",
                "operationId": "update-signup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "eventid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Signup ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Signup object",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clapper.Signup"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/clapper/event/{eventid}/{signupid}/{crewid}": {
            "put": {
                "description": "Uses JWT to set who is doing the crew position",
                "tags": [
                    "clapper-crews"
                ],
                "summary": "Set crew user by user token",
                "operationId": "set-crew-user-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "eventid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Signup ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "crewid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/clapper/event/{eventid}/{signupid}/{positionid}": {
            "post": {
                "description": "Creates a new crew object, that being a single person.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-crews"
                ],
                "summary": "Add a position to a signup sheet as crew",
                "operationId": "new-crew",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "eventid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Signup ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "crewid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/clapper/event/{signupid}/{crewid}/reset": {
            "put": {
                "description": "Uses JWT to set who is doing the crew position to empty",
                "tags": [
                    "clapper-crews"
                ],
                "summary": "Reset crew user to blank",
                "operationId": "delete-crew-user-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "eventid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Signup ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "crewid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/clapper/positions": {
            "get": {
                "description": "Lists all positions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clapper-positions"
                ],
                "summary": "List positions",
                "operationId": "get-positions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clapper.Position"
                            }
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-positions"
                ],
                "summary": "Update position",
                "operationId": "update-position",
                "parameters": [
                    {
                        "description": "Position object",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clapper.Position"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-positions"
                ],
                "summary": "New position",
                "operationId": "new-position",
                "parameters": [
                    {
                        "description": "Position object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clapper.Position"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Position ID",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/v1/internal/clapper/positions/{positionid}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "clapper-positions"
                ],
                "summary": "Delete position",
                "operationId": "delete-position",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Position ID",
                        "name": "positionid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/clapper/{eventid}/{signupid}": {
            "delete": {
                "description": "deletes a signup by ID.",
                "tags": [
                    "clapper-signups"
                ],
                "summary": "Delete signup",
                "operationId": "delete-signup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Signup ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/clapper/{eventid}/{signupid}/{crewid}": {
            "delete": {
                "description": "deletes a crew position by ID.",
                "tags": [
                    "clapper-crews"
                ],
                "summary": "Delete crew",
                "operationId": "delete-signup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Signup ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Crew ID",
                        "name": "signupid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/creator/calendar/{year}/{month}": {
            "get": {
                "description": "Lists videos by month.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-videos"
                ],
                "summary": "List videos by month",
                "operationId": "get-creator-videos-calendar",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "month",
                        "name": "month",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/video.MetaCal"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/encodes/presets": {
            "get": {
                "description": "Lists all encode presets, these are groups of instructions (formats) for the encoder to create the video",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-encodes"
                ],
                "summary": "List all encode presets",
                "operationId": "get-creator-encodes-presets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/encode.Preset"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "updates an preset",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-encodes"
                ],
                "summary": "Update a preset",
                "operationId": "update-creator-encodes-preset",
                "parameters": [
                    {
                        "description": "Preset object",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/encode.Preset"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "description": "creates a new preset.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-encodes"
                ],
                "summary": "New preset",
                "operationId": "new-creator-encodes-preset",
                "parameters": [
                    {
                        "description": "Preset object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/encode.Preset"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Preset ID",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/encodes/profiles": {
            "get": {
                "description": "Lists all encode formats, these are instructions for the encoder to create the video",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-encodes"
                ],
                "summary": "List all encode formats",
                "operationId": "get-creator-encodes-formats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/encode.Format"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/playlists": {
            "get": {
                "description": "Lists all playlists, doesn't include videos inside.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-playlists"
                ],
                "summary": "List all playlists",
                "operationId": "get-creator-playlists-all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/playlist.Playlist"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a playlist, video ID's required otherwise it will remove all videos.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-playlists"
                ],
                "summary": "Update playlist",
                "operationId": "update-creator-playlist",
                "parameters": [
                    {
                        "description": "Playlist object",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist.New"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "description": "creates a new playlist with optional video ID's.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-playlists"
                ],
                "summary": "New playlist",
                "operationId": "new-creator-playlist",
                "parameters": [
                    {
                        "description": "Playlist object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Playlist ID",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/playlists/{playlistid}": {
            "get": {
                "description": "Get a playlist including it's children videos.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-playlists"
                ],
                "summary": "Get playlist by ID",
                "operationId": "get-creator-playlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "playlistid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/playlist.Playlist"
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/playout/channels": {
            "get": {
                "description": "Lists all channels, these are a rough implementation of what is too come (linear channels)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-playout-channels"
                ],
                "summary": "List all channels",
                "operationId": "get-creator-playout-channels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/playout.Channel"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "updates an channel",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-playout-channels"
                ],
                "summary": "Update a channel",
                "operationId": "update-creator-playout-channel",
                "parameters": [
                    {
                        "description": "Channel object",
                        "name": "channel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playout.Channel"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "description": "creates a new channel.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-playout-channels"
                ],
                "summary": "New channel",
                "operationId": "new-creator-playout-channel",
                "parameters": [
                    {
                        "description": "Channel object",
                        "name": "channel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/playout.Channel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Channel ID",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/playout/channels/{channelid}": {
            "delete": {
                "description": "deletes a channel by the short URL.",
                "tags": [
                    "creator-playout-channels"
                ],
                "summary": "Delete channel",
                "operationId": "delete-creator-playout-channel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Channel URL Name",
                        "name": "channelid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/creator/series": {
            "get": {
                "description": "Lists all series, doesn't include videos inside.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-series"
                ],
                "summary": "List all series",
                "operationId": "get-creator-series-all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/series.Meta"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/series/{seriesid}": {
            "get": {
                "description": "Get a series including it's children videos.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-series"
                ],
                "summary": "Get series by ID",
                "operationId": "get-creator-series",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Series ID",
                        "name": "seriesid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/series.Series"
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/stats": {
            "get": {
                "description": "Gets the statistics about the global video library.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator"
                ],
                "summary": "Get global video library information",
                "operationId": "get-creator-glob-stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/stats.VideoGlobalStats"
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/videos": {
            "get": {
                "description": "Lists all videos, doesn't include files inside.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-videos"
                ],
                "summary": "List all videos",
                "operationId": "get-creator-videos-all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/video.Meta"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a video",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-videos"
                ],
                "summary": "Update video",
                "operationId": "update-creator-video",
                "parameters": [
                    {
                        "description": "VideoItem object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/video.Item"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video ID",
                        "schema": {
                            "type": "body"
                        }
                    }
                }
            },
            "post": {
                "description": "creates a new video, requires the file ID/name to find it in CDN.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "creator-videos"
                ],
                "summary": "New video",
                "operationId": "new-creator-video",
                "parameters": [
                    {
                        "description": "NewVideo object",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/video.New"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/creator/videos/my": {
            "get": {
                "description": "Lists all videos, doesn't include files inside. Uses the createdBy user ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-videos"
                ],
                "summary": "List all videos created by user ID",
                "operationId": "get-creator-videos-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/video.Meta"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/creator/videos/{videoid}": {
            "get": {
                "description": "Get a playlist including it's children files.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "creator-videos"
                ],
                "summary": "Get video by ID",
                "operationId": "get-creator-video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "videoid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/video.Item"
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/list/{listid}": {
            "get": {
                "description": "Get a mailing list. Provides list subscribers also",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Get Mailing list",
                "operationId": "get-mailing-list-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "listid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/misc.List"
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/list/{listid}/subscribe": {
            "post": {
                "description": "Subscribe to a mailing list by a JWT",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Subscribe to mailing list by token",
                "operationId": "new-mailing-list-subscriber-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "listid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {}
                }
            }
        },
        "/v1/internal/misc/list/{listid}/subscribe/{userid}": {
            "post": {
                "description": "Subscribe to a mailing list by a user ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Subscribe to mailing list by user ID",
                "operationId": "new-mailing-list-subscriber-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "listid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {}
                }
            }
        },
        "/v1/internal/misc/list/{listid}/subscribers": {
            "get": {
                "description": "Get a mailing list's subscribers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Get subscribers",
                "operationId": "get-mailing-list-subscribers-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "listid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/misc.List"
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/list/{listid}/unsubscribe": {
            "delete": {
                "description": "Unsubscribe to a mailing list by a JWT",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Unsubscribe to mailing list by token",
                "operationId": "delete-mailing-list-subscriber-token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "listid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/misc/list/{listid}/unsubscribe/{userid}": {
            "delete": {
                "description": "Unsubscribe to a mailing list by a user ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Unsubscribe to mailing list by user ID",
                "operationId": "delete-mailing-list-subscriber-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "listid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/misc/lists": {
            "get": {
                "description": "Lists all mailing lists.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Get Mailing lists",
                "operationId": "get-mailing-lists",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/misc.List"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/lists/my": {
            "get": {
                "description": "Lists all mailing lists. Provides extra context for what the user has subscribed too",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Get Mailing lists by token",
                "operationId": "get-mailing-lists-token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/misc.List"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/quotes": {
            "put": {
                "description": "updates a quote. Still need to provide the whole Quote object,\nweb-api will overwrite created by User ID to keep with existing record.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "misc-quotes"
                ],
                "summary": "Update quote",
                "operationId": "update-quote",
                "parameters": [
                    {
                        "description": "Quote object",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/misc.Quote"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "description": "creates a new quote.\nweb-api will overwrite created by User ID with the token's user ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "misc-quotes"
                ],
                "summary": "New quote",
                "operationId": "new-quote",
                "parameters": [
                    {
                        "description": "Quote object",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/misc.Quote"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Quote ID",
                        "schema": {
                            "$ref": "#/definitions/int"
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/quotes/{amount}/{page}": {
            "get": {
                "description": "Lists quotes by pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "misc-quotes"
                ],
                "summary": "List quotes",
                "operationId": "get-quotes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Amount",
                        "name": "amount",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/misc.QuotePage"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/quotes/{quoteid}": {
            "delete": {
                "description": "deletes a quote by ID.",
                "tags": [
                    "misc-quotes"
                ],
                "summary": "Delete quote",
                "operationId": "delete-quote",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Quote ID",
                        "name": "quoteid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/internal/misc/webcams": {
            "get": {
                "description": "List webcams available to user by using the permission ID",
                "tags": [
                    "misc-webcams"
                ],
                "summary": "List webcams",
                "operationId": "list-webcams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/misc.Webcam"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/misc/webcams/{cameraid}": {
            "get": {
                "description": "Reverse proxies the selected webcam returns the jpeg feed as a result.",
                "tags": [
                    "misc-webcams"
                ],
                "summary": "Get webcam",
                "operationId": "get-webcam",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Camera ID",
                        "name": "cameraid",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        },
        "/v1/internal/people/user": {
            "get": {
                "description": "Get a basic user object by JWT token generated by web-auth.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people-user"
                ],
                "summary": "Get a user by token",
                "operationId": "get-user-token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/people.User"
                        }
                    }
                }
            }
        },
        "/v1/internal/people/user/full": {
            "get": {
                "description": "Get a complete user object by JWT token generated by web-auth.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people-user"
                ],
                "summary": "Get a full user by token",
                "operationId": "get-user-token-full",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/people.UserFull"
                        }
                    }
                }
            }
        },
        "/v1/internal/people/user/{userid}": {
            "get": {
                "description": "Get a basic user object by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people-user"
                ],
                "summary": "Get a user by ID",
                "operationId": "get-user-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/people.User"
                        }
                    }
                }
            }
        },
        "/v1/internal/people/user/{userid}/full": {
            "get": {
                "description": "Get a complete user object by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people-user"
                ],
                "summary": "Get a full user by ID",
                "operationId": "get-user-id-full",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/people.User"
                        }
                    }
                }
            }
        },
        "/v1/internal/people/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people-users"
                ],
                "summary": "List all users",
                "operationId": "get-people-users-all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/misc.List"
                            }
                        }
                    }
                }
            }
        },
        "/v1/internal/people/users/{roleid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people-users"
                ],
                "summary": "List all users of a given role",
                "operationId": "get-people-users-roles-members",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "roleid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/misc.List"
                            }
                        }
                    }
                }
            }
        },
        "/v1/list_unsubscribe/{uuid}": {
            "get": {
                "description": "Unsubscribe to a mailing list by a subscriber UUID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "misc-list"
                ],
                "summary": "Unsubscribe to mailing list by subscriber UUID",
                "operationId": "delete-mailing-list-subscriber-uuid",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscriber UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1/public/find/{url}": {
            "get": {
                "description": "Allows us to remain backwards compatible with the existing URLs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-breadcrumb"
                ],
                "summary": "Converts a VOD url to either a series or video",
                "operationId": "get-public-breadcrumb-find",
                "parameters": [
                    {
                        "type": "string",
                        "description": "URL Path",
                        "name": "url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.BreadcrumbItem"
                        }
                    }
                }
            }
        },
        "/v1/public/playlist/popular/all": {
            "get": {
                "description": "Provides a fake playlist, containing a list of popular videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-playlist"
                ],
                "summary": "Provides a playlist of popular videos of all time",
                "operationId": "get-public-playlist-popular-by-all-time",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Playlist"
                        }
                    }
                }
            }
        },
        "/v1/public/playlist/popular/month": {
            "get": {
                "description": "Provides a fake playlist, containing a list of popular videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-playlist"
                ],
                "summary": "Provides a playlist of popular videos of past month",
                "operationId": "get-public-playlist-popular-by-past-month",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Playlist"
                        }
                    }
                }
            }
        },
        "/v1/public/playlist/popular/year": {
            "get": {
                "description": "Provides a fake playlist, containing a list of popular videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-playlist"
                ],
                "summary": "Provides a playlist of popular videos of past year",
                "operationId": "get-public-playlist-popular-by-past-year",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Playlist"
                        }
                    }
                }
            }
        },
        "/v1/public/playlist/random": {
            "get": {
                "description": "Provides a fake playlist, containing a list of random videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-playlist"
                ],
                "summary": "Provides a playlist of random videos",
                "operationId": "get-public-playlist-random",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Playlist"
                        }
                    }
                }
            }
        },
        "/v1/public/playlist/{seriesid}": {
            "get": {
                "description": "Returns a playlist object, includes videos (not videofiles) and metadata.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-playlist"
                ],
                "summary": "Provides a playlist",
                "operationId": "get-public-playlist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Playlist ID",
                        "name": "playlistid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Playlist"
                        }
                    }
                }
            }
        },
        "/v1/public/playout/channels": {
            "get": {
                "description": "Lists the publically visible channels",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-playout-channels"
                ],
                "summary": "Provides the visible channels",
                "operationId": "get-public-stream-channels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/public.Channel"
                            }
                        }
                    }
                }
            }
        },
        "/v1/public/series/yearly/{year}": {
            "get": {
                "description": "Returns a series array, virtual series that contains child series / videos\nthat were made in that year.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-series"
                ],
                "summary": "Series of a year",
                "operationId": "get-public-series-year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/public.Series"
                            }
                        }
                    }
                }
            }
        },
        "/v1/public/series/{seriesid}": {
            "get": {
                "description": "Returns a series object, including the children videos and series.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-series"
                ],
                "summary": "Provides a series",
                "operationId": "get-public-series",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Series ID",
                        "name": "seriesid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Series"
                        }
                    }
                }
            }
        },
        "/v1/public/series/{seriesid}/breadcrumb": {
            "get": {
                "description": "Returns a path of series to a series",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-breadcrumb"
                ],
                "summary": "Provides a breadcrumb for a series",
                "operationId": "get-public-breadcrumb-series",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Series ID",
                        "name": "seriesid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Breadcrumb"
                        }
                    }
                }
            }
        },
        "/v1/public/teams": {
            "get": {
                "description": "Lists the teams, their members, and info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-teams"
                ],
                "summary": "Provides the current teams",
                "operationId": "get-public-teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/public.Team"
                            }
                        }
                    }
                }
            }
        },
        "/v1/public/teams/officers": {
            "get": {
                "description": "Lists the current officers, including their info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-teams"
                ],
                "summary": "Provides the current officers",
                "operationId": "get-public-teams-officers-all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/public.TeamMember"
                            }
                        }
                    }
                }
            }
        },
        "/v1/public/teams/{teamid}": {
            "get": {
                "description": "Contains members and a range of descriptions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-teams"
                ],
                "summary": "Provides the team of that year",
                "operationId": "get-public-team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "teamid",
                        "name": "teamid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Team"
                        }
                    }
                }
            }
        },
        "/v1/public/teams/{teamid}/{year}": {
            "get": {
                "description": "Get the team and their members of that year",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-teams"
                ],
                "summary": "Provides the team of a selected year",
                "operationId": "get-public-team-year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "teamid",
                        "name": "teamid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "year",
                        "name": "year",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Team"
                        }
                    }
                }
            }
        },
        "/v1/public/video/{videoid}": {
            "get": {
                "description": "Returns a video item. Including the video files.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-video"
                ],
                "summary": "Provides a video item",
                "operationId": "get-public-video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "videoid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.VideoItem"
                        }
                    }
                }
            }
        },
        "/v1/public/video/{videoid}/breadcrumb": {
            "get": {
                "description": "Returns a path of series to a video",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-breadcrumb"
                ],
                "summary": "Provides a breadcrumb for a video",
                "operationId": "get-public-breadcrumb-video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Video ID",
                        "name": "videoid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/public.Breadcrumb"
                        }
                    }
                }
            }
        },
        "/v1/public/videos/{offset}/{page}": {
            "get": {
                "description": "List of video meta's in order of broadcast date.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public-video"
                ],
                "summary": "Provides a list of videos",
                "operationId": "get-public-videos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/public.VideoMeta"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "clapper.Attendee": {
            "type": "object",
            "properties": {
                "attendStatus": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "clapper.CrewPosition": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "credited": {
                    "type": "boolean"
                },
                "crewID": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "ordering": {
                    "type": "integer"
                },
                "permissionID": {
                    "type": "string"
                },
                "positionID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "clapper.Event": {
            "type": "object",
            "properties": {
                "attendees": {
                    "description": "Used for social, meet and other. This would be a XOR with Signups",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clapper.Attendee"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "eventID": {
                    "type": "integer"
                },
                "eventType": {
                    "type": "string"
                },
                "isCancelled": {
                    "type": "boolean"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "isTentative": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "signups": {
                    "description": "Used for shows",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clapper.Signup"
                    }
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "clapper.NewCrew": {
            "type": "object",
            "properties": {
                "credited": {
                    "type": "boolean"
                },
                "locked": {
                    "type": "boolean"
                },
                "ordering": {
                    "type": "integer"
                },
                "positionID": {
                    "type": "integer"
                }
            }
        },
        "clapper.NewEvent": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "eventType": {
                    "type": "string"
                },
                "isCancelled": {
                    "type": "boolean"
                },
                "isPrivate": {
                    "type": "boolean"
                },
                "isTentative": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "clapper.NewSignup": {
            "type": "object",
            "properties": {
                "arrivalTime": {
                    "type": "string"
                },
                "crew": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clapper.NewCrew"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "eventID": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "unlockDate": {
                    "type": "string"
                }
            }
        },
        "clapper.Position": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissionID": {
                    "type": "string"
                },
                "positionID": {
                    "type": "integer"
                }
            }
        },
        "clapper.Signup": {
            "type": "object",
            "properties": {
                "arrivalTime": {
                    "type": "string"
                },
                "crew": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clapper.CrewPosition"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "signupID": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "unlockDate": {
                    "type": "string"
                }
            }
        },
        "encode.Format": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "mimeType": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "watermarked": {
                    "type": "boolean"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "encode.Preset": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "formats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/encode.Format"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "misc.List": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isSubscribed": {
                    "type": "boolean"
                },
                "listID": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permissionID": {
                    "type": "string"
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/misc.Subscriber"
                    }
                }
            }
        },
        "misc.Quote": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "quote": {
                    "type": "string"
                }
            }
        },
        "misc.QuotePage": {
            "type": "object",
            "properties": {
                "lastPageIndex": {
                    "type": "integer"
                },
                "quotes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/misc.Quote"
                    }
                }
            }
        },
        "misc.Subscriber": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/people.Permission"
                    }
                },
                "subscribeID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "misc.Webcam": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mimeType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "people.Permission": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "people.Role": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/people.Permission"
                    }
                }
            }
        },
        "people.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/people.Permission"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "people.UserFull": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastLogin": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/people.Permission"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/people.Role"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "playlist.New": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "videoIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "playlist.Playlist": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/video.Meta"
                    }
                }
            }
        },
        "playout.Channel": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "\"Very good tennis\"",
                    "type": "string"
                },
                "location": {
                    "description": "\"Central Hall\"",
                    "type": "string"
                },
                "name": {
                    "description": "\"YUSU Tennis 2020\"",
                    "type": "string"
                },
                "outputType": {
                    "type": "string"
                },
                "outputURL": {
                    "type": "string"
                },
                "scheduledEnd": {
                    "type": "string"
                },
                "scheduledStart": {
                    "type": "string"
                },
                "status": {
                    "description": "\"live\" or \"scheduled\" or \"cancelled\" or \"finished\"",
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "urlName": {
                    "description": "\"tennis\"",
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                }
            }
        },
        "public.Breadcrumb": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "useInURL": {
                    "type": "boolean"
                }
            }
        },
        "public.BreadcrumbItem": {
            "type": "object",
            "properties": {
                "series": {
                    "type": "object",
                    "$ref": "#/definitions/public.Series"
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/public.VideoItem"
                }
            }
        },
        "public.Channel": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "\"Very good tennis\"",
                    "type": "string"
                },
                "location": {
                    "description": "\"Central Hall\"",
                    "type": "string"
                },
                "name": {
                    "description": "\"YUSU Tennis 2020\"",
                    "type": "string"
                },
                "outputType": {
                    "type": "string"
                },
                "outputURL": {
                    "type": "string"
                },
                "scheduledEnd": {
                    "type": "string"
                },
                "scheduledStart": {
                    "type": "string"
                },
                "status": {
                    "description": "\"live\" or \"scheduled\" or \"cancelled\" or \"finished\"",
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "urlName": {
                    "description": "\"tennis\"",
                    "type": "string"
                }
            }
        },
        "public.Playlist": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/public.VideoItem"
                    }
                }
            }
        },
        "public.Series": {
            "type": "object",
            "properties": {
                "childSeries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/public.SeriesMeta"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/public.VideoMeta"
                    }
                }
            }
        },
        "public.SeriesMeta": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "public.Team": {
            "type": "object",
            "properties": {
                "emailAlias": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "longDescription": {
                    "type": "string"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/public.TeamMember"
                    }
                },
                "name": {
                    "type": "string"
                },
                "shortDescription": {
                    "type": "string"
                }
            }
        },
        "public.TeamMember": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "emailAlias": {
                    "type": "string"
                },
                "historywikiURL": {
                    "type": "string"
                },
                "officerDescription": {
                    "type": "string"
                },
                "officerID": {
                    "type": "integer"
                },
                "officerName": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "public.VideoFile": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "mimeType": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "public.VideoItem": {
            "type": "object",
            "properties": {
                "broadcastDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/public.VideoFile"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "seriesID": {
                    "type": "integer"
                },
                "thumbnail": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "public.VideoMeta": {
            "type": "object",
            "properties": {
                "broadcastDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "seriesID": {
                    "type": "integer"
                },
                "thumbnail": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "series.Meta": {
            "type": "object",
            "properties": {
                "depth": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "series.Series": {
            "type": "object",
            "properties": {
                "childSeries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/series.Meta"
                    }
                },
                "depth": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/video.Meta"
                    }
                }
            }
        },
        "stats.VideoGlobalStats": {
            "type": "object",
            "properties": {
                "totalPendingVideos": {
                    "type": "integer"
                },
                "totalStorageUsed": {
                    "type": "integer"
                },
                "totalVideoHits": {
                    "type": "integer"
                },
                "totalVideos": {
                    "type": "integer"
                }
            }
        },
        "video.File": {
            "type": "object",
            "properties": {
                "encodeFormat": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "video.Item": {
            "type": "object",
            "properties": {
                "broadcastDate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdByID": {
                    "type": "integer"
                },
                "createdByNick": {
                    "type": "string"
                },
                "deleteByID": {
                    "type": "string"
                },
                "deleteByNick": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "description": "when listing description isn't included",
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/video.File"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "presetID": {
                    "type": "string"
                },
                "seriesID": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedByID": {
                    "type": "string"
                },
                "updatedByNick": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "video.Meta": {
            "type": "object",
            "properties": {
                "broadcastDate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdByID": {
                    "type": "integer"
                },
                "createdByNick": {
                    "type": "string"
                },
                "deleteByID": {
                    "type": "string"
                },
                "deleteByNick": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "description": "when listing description isn't included",
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "presetID": {
                    "type": "string"
                },
                "seriesID": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedByID": {
                    "type": "string"
                },
                "updatedByNick": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        },
        "video.MetaCal": {
            "type": "object",
            "properties": {
                "broadcastDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "video.New": {
            "type": "object",
            "properties": {
                "broadcastDate": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "fileID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "preset": {
                    "type": "integer"
                },
                "publishType": {
                    "type": "string"
                },
                "seriesID": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "urlName": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
